KALABOX 
=====================
Kalabox is a local server environment optimized for PHP development. It was built with Drupal in mind but, with 
small tweaks, can be used for any PHP development. It currently ships with the following packages, all configured and 
tuned, optimized for a fast, best-practices local development experience.

1.  nginx
2.  PHP5 (with common extensions including apc and xdebug)
3.  MySQL
4.  Apache Solr
5.  Apache Tomcat
6.  SSH
7.  git
8.  drush (with custom commands for Pantheon integration)
9.  PHPMyAdmin
10. samba (to expose your webroot to your VB host)

Kalabox was intended to be run on Ubuntu 12.04 LTS and has not been tested (and likely does not work) on other operating systems.  
You can run Kalabox natively in Ubuntuy 12.04 LTS or, with some additional setup, you can run it on Ubuntu 12.04 LTS Server inside
of a Virtual Box. Kalamuna recommends running Kalabox in Virtual Box.

Kalabox does not ship with an IDE so people have the flexibility to choose their own. 

Kalabox was also built to work seamlessly with Pantheon Systems.


Supported 
=====================
Drupal 6
Drupal 7


Changelog
======================
Version 1.0-rc1
- Drush commands for Pantheon
    - get/refresh files
    - get/refresh database
    - get/refresh codebase
    - build/refresh entire site
    - build vhost
    - rebuilt settings
- Added drush directory to samba
- Added home directory to samba

Version 1.0-beta2
- Improved handling of /etc/hosts initial setup
- Improved phpmyadmin config code
- Uses installation user for samba, git, ssh setup
- Auto generates SSH keys for installation user
- Custom facts to grab the installation user and full name
- Auto git config
- Auto add installation user to www-data group

Version 1.0-beta1
- Fixed SSH config issue
- Fixed writability of /var/www to guest machines
- Ensured specific package versions for hopefully improved stability
- Raised apc.shm_size to 128M
- Added default domains into hosts file
- Added a generic nginx vhost file for drupal sites
- Added drush command to build drupal nginx vhosts
- Updated README

Version 1.0-alpha1
- Proof of concept


Installation
======================
We are going to assume that you are installing Ubuntu 12.04 Server in a Virtual Box.

SET UP YOUR SERVER
1. Install Ubuntu 12.04 LTS Server*
2. run sudo apt-get update
3. run sudo apt-get upgrade
4. run sudo apt-get install puppet
5. run sudo puppet agent --verbose --test --pluginsync --server kalabox.kalamuna.com

* If running in Virtual Box make sure you use Bridged Networking. You do not need to install any of the packages offered at the end
  such as SSH or the LAMP Server. We recommend you set your Virtual Box to have 2048MB of RAM with 50GB of storage.


Post Installation Setup + Tips & Tricks
======================
You will want to find the IP addresses of your HOST (the machine running Virtual Box) and your GUEST (the Virtual Box running your Kalabox).

CONFIGURING HOSTS
    *On Your HOST
    1. Add the following line to your /etc/hosts file: "GUEST_IPADDRESS     kala GUESTHOSTNAME php.kala" 

    To find the address of your GUEST machine run "ifconfig" from the GUEST machine's command line and your IP will be the 
    address after "inet addr:" 

    *On Your GUEST
    2. add the following line to your /etc/hosts file: "HOST_IPADDRESS      xdebug.kala" (this will let you use xdebug from an IDE on your HOST)

    To find the address of your HOST machine make sure you complete Step 1 above and then visit http://kala/ in a webrowser on your HOST machine. 
    The IP ADDRESS of your host will be listed in the phpinfo() below the KALAMUNA screen as the _SERVER["REMOTE_ADDR"] variable. 
    
USING SSH
    Once you have completed the CONFIGURING HOSTS setup we recommend that you minimize VB and the VB Terminal in favor of using your HOST's terminal. This
    allows for a more authenticate experience as it relates to development. Open a terminal in your host and type "ssh USERNAME@kala" to connect to
    your kalabox. You will use the username you set up during installation of Ubuntu 12.04 LTS Server.

ACCESSING YOUR WEBROOT/DRUSH/HOME
    You may want to edit your code using an IDE on your HOST, downlaod your Pantheon aliases or add custom drush commands. Check the network on your HOST
    and you should see three shares for your vbox: 
    
    1. WWW <- Your Webroot
    2. DRUSH <- Your drush library
    3. HOME <- Your home folder
    
CHANGING LOCATION (AKA GETTING NEW IP ADDRESSES)
    If you are moving location you may be getting assigned new IP addresses when you move. When this happens you should reboot your GUEST machine
    and go through the CONFIGURING HOSTS steps again. We realize this is annoying and it will not be an issue in the 2.0 release.

Working with Pantheon
======================
SITE ALIASES
The first step to working with pantheon is to get your site aliases. These are available for download on your pantheon account page. You will want to 
open up your HOME network share and put them in the .drush folder. You can verify that they are in there by running "drush sa" on your GUEST.

SSH KEYS
You are also going to want to make sure you add your kalabox ssh public key to pantheon. Kalabox automatically generates these keys for you on installation.
You can find the public key in ~/.ssh/id_rsa.pub. You may be able to open it by going to the HOME network share on your host or you can run the following 
command on your GUEST:

cat ~/.ssh/id_rsa.pub

Just copy and paste the output into pantheon. If you are prompted for a password try rebooting your GUEST.


DRUSH
Kalabox ships with 6 custom drush commands designed specifically for Pantheon and Kalabox. They are useless without pantheon's site alias file. 
These commands only work with your dev environment. You will use the same naming convention as your pantheon aliases (PANTHEON.SITENAME.ENV) but you
will omit the @. Here are the commands.

    drush code pantheon.SITENAME.dev    - Will either git clone or git pull from your pantheon codebase to your kalabox at /var/www/SITENAME
    drush data pantheon.SITENAME.dev    - Will either download and import from your pantheon database to your kalabox at kala:SITENAME_kala
    drush files pantheon.SITENAME.dev   - Will sync your pantheon files to your kalabox at /var/www/SITENAME/sites/default/files
    drush vhost pantheon.SITENAME.dev   - Will build and enable a nginx vhost file of your pantheon site on your kalabax at SITENAME.kala
    drush build pantheon.SITENAME.dev   - Will completely build your pantheon site on your kalabox, this will edit settings.php
    drush krefresh pantheon.SITENAMEdev - Will refresh the code, database and files on your kalabox from your pantheon site

Remember that the GUEST does not automatically update the /etc/hosts file on your HOST so you will have to check for and edit the following line.

"GUEST_IPADDRESS     kala GUESTHOSTNAME php.kala"

and add your new site to it

"GUEST_IPADDRESS     kala GUESTHOSTNAME php.kala SITENAME.kala"

You should now be able to navigate to SITENAME.kala and get to your site! 


